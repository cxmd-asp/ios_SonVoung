//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let reuseIdentifier = reuseIdentifier()

  var color: color { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 2 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `ContactCell`.
    var contactCell: RswiftResources.NibReference<ContactCell> { .init(name: "ContactCell", bundle: bundle) }

    /// Nib `IndividualMessageCell`.
    var individualMessageCell: RswiftResources.NibReferenceReuseIdentifier<IndividualMessageCell, IndividualMessageCell> { .init(name: "IndividualMessageCell", bundle: bundle, identifier: "IndividualMessageCell") }

    func validate() throws {

    }
  }

  /// This `_R.reuseIdentifier` struct is generated, and contains static references to 1 reuse identifiers.
  struct reuseIdentifier {

    /// Reuse identifier `IndividualMessageCell`.
    let individualMessageCell: RswiftResources.ReuseIdentifier<IndividualMessageCell> = .init(identifier: "IndividualMessageCell")
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 5 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var contact: contact { .init(bundle: bundle) }
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var login: login { .init(bundle: bundle) }
    var messages: messages { .init(bundle: bundle) }
    var splash: splash { .init(bundle: bundle) }

    func contact(bundle: Foundation.Bundle) -> contact {
      .init(bundle: bundle)
    }
    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func login(bundle: Foundation.Bundle) -> login {
      .init(bundle: bundle)
    }
    func messages(bundle: Foundation.Bundle) -> messages {
      .init(bundle: bundle)
    }
    func splash(bundle: Foundation.Bundle) -> splash {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.contact.validate()
      try self.launchScreen.validate()
      try self.login.validate()
      try self.messages.validate()
      try self.splash.validate()
    }


    /// Storyboard `Contact`.
    struct contact: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = ContactViewController

      let bundle: Foundation.Bundle

      let name = "Contact"

      var contactViewController: RswiftResources.StoryboardViewControllerIdentifier<ContactViewController> { .init(identifier: "ContactViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if contactViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'contactViewController' could not be loaded from storyboard 'Contact' as 'ContactViewController'.") }
      }
    }

    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }

    /// Storyboard `Login`.
    struct login: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = LoginViewController

      let bundle: Foundation.Bundle

      let name = "Login"

      var loginViewController: RswiftResources.StoryboardViewControllerIdentifier<LoginViewController> { .init(identifier: "LoginViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if loginViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'loginViewController' could not be loaded from storyboard 'Login' as 'LoginViewController'.") }
      }
    }

    /// Storyboard `Messages`.
    struct messages: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = MessagesViewController

      let bundle: Foundation.Bundle

      let name = "Messages"

      var messagesViewController: RswiftResources.StoryboardViewControllerIdentifier<MessagesViewController> { .init(identifier: "MessagesViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if messagesViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'messagesViewController' could not be loaded from storyboard 'Messages' as 'MessagesViewController'.") }
      }
    }

    /// Storyboard `Splash`.
    struct splash: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = SplashViewController

      let bundle: Foundation.Bundle

      let name = "Splash"

      var splashViewController: RswiftResources.StoryboardViewControllerIdentifier<SplashViewController> { .init(identifier: "SplashViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if splashViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'splashViewController' could not be loaded from storyboard 'Splash' as 'SplashViewController'.") }
      }
    }
  }
}